#!/bin/bash
#
# Copyright 2018 Red Hat, Inc.
#
# NAME
#     lab-review-management - grading script for RH362 management review lab
# SYNOPSIS
#     lab-review-management {grade}
#
#
# DESCRIPTION
#     This script, based on singular argument, does grade, for the management review LAB.
#
# CHANGELOG
#   * Thu May 24 2018 Chen Chang <cchang@redhat.com>
#   - original code
PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
target='idm'

# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup grade)

function lab_grade {
  print_header "Grading the student's work:"
  host_reachable ${target}

  ${ssh} ${target} "echo RedHat123^ | kinit admin"

  pad ' . Verifying user group'
  if ${ssh} ${target} "ipa group-find idmgroup01"; then
    print_PASS
  else
    print_FAIL
  fi

  pad " 路 Verifying password policy"
  if ${ssh} ${target} "ipa pwpolicy-show idmgroup01 | xargs | grep 'Group: idmgroup01 Min length: 8 Priority: 1 Max failures: 2'"; then
    print_PASS
  else
    print_FAIL
  fi

  pad " 路 Verifying automembership rule"
  if ${ssh} ${target} "ipa automember-find --type=group idmgroup01 | grep 'Inclusive Regex: uid=idmuser.*'"; then
    print_PASS
  else
    print_FAIL
  fi

  pad " 路 Verifying user"
  if ${ssh} ${target} "ipa user-show idmuser01 | grep 'Roles: User Provisioning'"; then
    print_PASS
  else
    print_FAIL
  fi

  pad " 路 Verifying role"
  if ${ssh} ${target} "ipa role-show 'User Provisioning' | grep 'Privileges: User Administrators'"; then
    print_PASS
  else
    print_FAIL
  fi

  # Overall grade
  print_line
  pad 'Overall lab grade'
  if [[ ${fail_count} -eq 0 ]]
  then
    print_PASS
  else
    print_FAIL
  fi
}



############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
