#!/bin/bash
#
# Copyright 2018 Red Hat, Inc.
#
# NAME
#     lab-review-relationship - grading script for RH362 AD trust review lab.
#
# SYNOPSIS
#     lab-review-relationship {setup|grade}
#
#
# DESCRIPTION
#     This script, based on singular argument, it does setup, and grade, for the AD trust review lab.
#
# CHANGELOG
#   * Tue Mar 22 2018 Chen Chang <cchang@redhat.com>
#   - original code
PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
target='workstation'
target2='replica1'
target3='idm'
directory='/home/student/ansible'
# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup grade)

function lab_setup {

  print_header "Setting up ${target} for lab exercise work:"
  host_reachable ${target}

    if ! rpm -q ansible
    then
      pad ' · Installing ansible'
      yum install -y http://materials.example.com/classroom/ansible/ansible-2.5.0-0.0.devel.201801312256git.512d6f6ac6.el7.ans.noarch.rpm && mkdir /home/student/ansible
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi
    
    if [ ! -d "$directory" ];
    then
      pad ' · Creating directory'
      mkdir $directory && chown -R student:student $directory
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi
  

    pad ' . Downloading files from classroom server'
    cd /home/student/ansible && wget --no-parent -r -nH --reject="index.html*" --cut-dirs=2 http://materials.example.com/classroom/ansible/ && chown -R student:student /home/student/ansible
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
    
    if ! rpm -q python2-winrm
    then
      pad ' · Installing python modules'
      cd $directory && rpm -ivh python2-winrm-0.2.2-1.el7.noarch.rpm python2-ntlm3-1.0.2-1.el7.noarch.rpm python2-requests_ntlm-0.3.0-1.el7.noarch.rpm python-xmltodict-0.9.0-1.el7.noarch.rpm
      if [ $? -eq 0 ]
      then
        print_SUCCESS
      else
        print_FAIL
      fi
    fi

     # Check for lab prerequisites
    pad ' · Configuring IdM server'
    cd /home/student/ansible && ansible-playbook install_ipa_server.yml
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_SUCCESS
    fi

    pad ' . Checking status of ad.example.net server'
    if cd /home/student/ansible/windows && ansible ad.example.net -m win_ping
    then 
      print_SUCCESS
    else
      print_FAIL
    fi

    pad ' · Creating Active Directory users'
    cd /home/student/ansible/windows && ansible-playbook users.yml
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_SUCCESS
    fi
    
    pad ' . Disabling Windows lock screen'
    cd /home/student/ansible/windows && ansible-playbook unlock.yml
    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_SUCCESS
    fi
 
}

function lab_grade {

  print_header "Grading the student's work on ${target}:"
  host_reachable ${target3}

  pad ' . Verifying DNS configuration'
  CMD='dig SRV example.net|grep ad.example.net'
  if ${ssh} ${target3} "${CMD}"
  then
    print_PASS
  else
    print_FAIL
  fi

  pad ' . Verifying the trust'
  CMD='ipa trustdomain-find "example.net"'
  if ${ssh} ${target3} "${CMD}"
  then
    print_PASS
  else
    print_FAIL
  fi

  # Overall grade
  print_line
  pad 'Overall lab grade'
  if [[ ${fail_count} -eq 0 ]]
  then
    print_PASS
  else
    print_FAIL
  fi


}



############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"
