#!/bin/bash
#
# Copyright 2017 Red Hat, Inc.
#
# NAME
#     lab-auth-hosts - grading script for RH362 auth-hosts GE
#
# SYNOPSIS
#     lab-auth-hosts {setup grade cleanup}
#
#        setup   - prepare the system for starting the lab
#        grade   - perform evaluation steps on the system
#        cleanup - perform post-lab cleanup
#
# DESCRIPTION
#     This script, based on singular argument, either does setup, grading,
#     cleanup.
#
# CHANGELOG
#   * Tue Apr 3 2018 Victor Costea <vcostea@redhat.com>
#   - Add grade and cleanup scripts and modify valid_commands array
#   * Wed Mar 14 2018 Chen Chang <cchang@redhat.com>
#   - original code
#########################################################################
#########################################################################

PATH=/usr/bin:/bin:/usr/sbin:/sbin

# Initialize and set some variables
run_as_root='true'
utilitytarget='utility.lab.example.net'
workstationtarget='workstation.lab.example.com'
ansible_dir='/home/student/ansible'

# This defines which subcommands are supported (setup, grade, etc.).
# Corresponding lab_COMMAND functions must be defined.
declare -a valid_commands=(setup grade cleanup)


function lab_setup {
  target=${utilitytarget}

  print_header "Setting up ${target} for lab exercise work:"
  host_reachable ${target}

  idm_base_state

  # Check for lab prerequisites
  pad ' · Registering utility: '
  cd ${ansible_dir} && ansible-playbook install_ipa_client.yml --extra-vars "ipa_client=utility.lab.example.net"
  if [[ $? -eq 0 ]]
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Installing Apache"
  if ${ssh} ${target} "rpm -q httpd || yum -y install httpd"
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  pad " · Creating web server directory"
  CMD="test -d /var/www/html/restricted"
  if ! ${ssh} ${target} "${CMD}"
  then
    CMD="mkdir /var/www/html/restricted" 

    ${ssh} ${target} ${CMD}

    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    print_SUCCESS
  fi

  pad " · Creating web server content"
  CMD="test -f /var/www/html/restricted/index.html"
  if ! ${ssh} ${target} ${CMD}
  then
    CMD="echo 'Restricted' > /var/www/html/restricted/index.html" 

    ${ssh} ${target} "${CMD}"

    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    print_SUCCESS
  fi

  pad " · Enabling web service"
  CMD="systemctl is-enabled httpd"
  if ! ${ssh} ${target} ${CMD}
  then
    CMD="systemctl enable httpd" 

    ${ssh} ${target} "${CMD}"

    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    print_SUCCESS
  fi

  pad " · Starting web service"
  CMD="systemctl is-active httpd"
  if ! ${ssh} ${target} ${CMD}
  then
    CMD="systemctl start httpd" 

    ${ssh} ${target} "${CMD}"

    if [ $? -eq 0 ]
    then
      print_SUCCESS
    else
      print_FAIL
    fi
  else
    print_SUCCESS
  fi

  print_line
}

function lab_grade {
  target=${utilitytarget}
  user01='idmuser01'

  print_header "Grading student's on ${target}:"
  host_reachable ${target}

  # Authenticate  ${user01} to ensure valid Kerberos credentials
  export KRB5_CONFIG=/etc/krb5_ipa.conf
  echo redhatnew | kinit ${user01}


  # The CMD command FAILS if access is restricted which
  # means the student configured apache correctly
  pad ' . Verifying access is restricted to unauthorized users'
  CMD='curl -f http://utility.lab.example.net/restricted/'
  if ! ${CMD}
  then
    print_PASS
  else
    print_FAIL
  fi

  pad " . Verifying access for ${user01} is not restricted"
  CMD='curl -u : --negotiate http://utility.lab.example.net/restricted/'
  if ${CMD}
  then
    print_PASS
  else
    print_FAIL
  fi

  # Overall grade
  print_line
  pad 'Overall lab grade'
  if [[ ${fail_count} -eq 0 ]]
  then
    print_PASS
  else
    print_FAIL
  fi

  print_line
}

function lab_cleanup {
  target=${workstationtarget}

  print_header "Cleaning up the lab on ${target}:"

  #AG: changed to register - it's needed later
  pad ' · Registering utility: '
  cd ${ansible_dir} && ansible-playbook install_ipa_client.yml --extra-vars "ipa_client=utility.lab.example.net"
  if [[ $? -eq 0 ]]
  then
    print_SUCCESS
  else
    print_FAIL
  fi

  print_line
}

############### Don't EVER change anything below this line ###############

# Source library of functions
source /usr/local/lib/${function_lib}
source /usr/local/lib/${platform_lib}

grading_main_program "$@"


